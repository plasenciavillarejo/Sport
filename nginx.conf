#server {
#    listen 80;
#    listen [::]:80;
    #El server_name tengo que cambiarlo con mi ip : 200.234.230.76
    #server_name 200.234.230.76;
#    server_name 200.234.230.76 sportbuddies.es www.sportbuddies.es;
#    location / {
#       root /usr/share/nginx/html/browser;
#       index index.html;
#       try_files $uri $uri/ /index.html =404;
#    }
#}

server {
    listen 80;
    server_name 200.234.230.76;

    # Servir los archivos estáticos de Angular
    #root /usr/share/nginx/html/browser;
    #index index.html;

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    # Redirigir todas las rutas al index.html
    location / {
        proxy_pass http://localhost:4200;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        #try_files $uri $uri/ /index.html;
    }
}

#server {
#    listen 80;
#    listen [::]:80;
#    server_name www.sportbuddies.es sportbuddies.es;

    # Proxy para el frontend Angular
#    location / {
#        proxy_pass http://localhost:4200; # Frontend Angular
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection 'upgrade';
#        proxy_set_header Host $host;
#        proxy_cache_bypass $http_upgrade;
#        try_files $uri $uri/ /index.html; # Angular maneja rutas desde index.html
#    }

    # Proxy para la ruta del login de OAuth 2
#    location /api/oauth2/ {
##        proxy_pass http://200.234.230.76:9000; # Backend para el login
#        proxy_http_version 1.1;
#        proxy_ssl_verify off; # Si el certificado no es válido (opcional)
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection 'upgrade';
#        proxy_set_header Host $host;
#        proxy_cache_bypass $http_upgrade;
#    }
#}
