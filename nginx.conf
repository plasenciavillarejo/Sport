#server {
#    listen 80;
#    listen [::]:80;
    #El server_name tengo que cambiarlo con mi ip : 200.234.230.76
    #server_name 200.234.230.76;
#    server_name 200.234.230.76 sportbuddies.es www.sportbuddies.es;
#    location / {
#       root /usr/share/nginx/html/browser;
#       index index.html;
#       try_files $uri $uri/ /index.html =404;
#    }
#}

#server {
#    listen 80;
#    server_name sportbuddies.es www.sportbuddies.es;

    #root /usr/share/nginx/html/browser;
    #index index.html;

    #location / {
    #    try_files $uri $uri/ /index.html;
    #}

    #error_page 404 /index.html;
#}


#server {
#    listen 80;
#    server_name www.sportbuddies.es sportbuddies.es;

#    root /usr/share/nginx/html/browser;
#    index index.html;

#    location / {
#        proxy_pass http://sportbuddiesappfe:80;
#        try_files $uri /index.html;  # Redirige rutas no encontradas al index.html
#    }
#}

server {
    listen 80;
    server_name sportbuddies.es www.sportbuddies.es;

    # No necesitas esta línea, ya que el contenido se sirve desde el contenedor
    # root /usr/share/nginx/html/browser;

    location / {
        proxy_pass http://sportbuddiesappfe:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Estas cabeceras ayudan a Angular a manejar las rutas correctamente
        try_files $uri $uri/ /index.html;
    }

     error_page 404 /index.html; # Asegúrate de que esto funcione con el proxy_pass
}